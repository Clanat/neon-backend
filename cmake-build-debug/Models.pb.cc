// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Models.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Models.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Request> {
} _Request_default_instance_;
class Response_ErrorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Response_Error> {
} _Response_Error_default_instance_;
class ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Response> {
} _Response_default_instance_;
class MemoryQuery_ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MemoryQuery_Result> {
} _MemoryQuery_Result_default_instance_;
class MemoryQueryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MemoryQuery> {
} _MemoryQuery_default_instance_;
class MemoryBatchQuery_ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MemoryBatchQuery_Result> {
} _MemoryBatchQuery_Result_default_instance_;
class MemoryBatchQueryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MemoryBatchQuery> {
} _MemoryBatchQuery_default_instance_;
class FunctionQuery_ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FunctionQuery_Result> {
} _FunctionQuery_Result_default_instance_;
class FunctionQueryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FunctionQuery> {
} _FunctionQuery_default_instance_;
class WoWObjectsResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WoWObjectsResult> {
} _WoWObjectsResult_default_instance_;

namespace protobuf_Models_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Error, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryQuery_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryQuery_Result, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryQuery, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryQuery, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryQuery, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryQuery, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryBatchQuery_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryBatchQuery_Result, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryBatchQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryBatchQuery, queries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionQuery_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionQuery_Result, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionQuery, args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionQuery, kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WoWObjectsResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WoWObjectsResult, pointers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WoWObjectsResult, guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WoWObjectsResult, types_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Request)},
  { 6, -1, sizeof(Response_Error)},
  { 11, -1, sizeof(Response)},
  { 17, -1, sizeof(MemoryQuery_Result)},
  { 22, -1, sizeof(MemoryQuery)},
  { 30, -1, sizeof(MemoryBatchQuery_Result)},
  { 35, -1, sizeof(MemoryBatchQuery)},
  { 40, -1, sizeof(FunctionQuery_Result)},
  { 45, -1, sizeof(FunctionQuery)},
  { 51, -1, sizeof(WoWObjectsResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Response_Error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MemoryQuery_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MemoryQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MemoryBatchQuery_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MemoryBatchQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FunctionQuery_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FunctionQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WoWObjectsResult_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Models.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace

void TableStruct::Shutdown() {
  _Request_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Response_Error_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Response_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _MemoryQuery_Result_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _MemoryQuery_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _MemoryBatchQuery_Result_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _MemoryBatchQuery_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _FunctionQuery_Result_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _FunctionQuery_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _WoWObjectsResult_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Request_default_instance_.DefaultConstruct();
  _Response_Error_default_instance_.DefaultConstruct();
  _Response_default_instance_.DefaultConstruct();
  _MemoryQuery_Result_default_instance_.DefaultConstruct();
  _MemoryQuery_default_instance_.DefaultConstruct();
  _MemoryBatchQuery_Result_default_instance_.DefaultConstruct();
  _MemoryBatchQuery_default_instance_.DefaultConstruct();
  _FunctionQuery_Result_default_instance_.DefaultConstruct();
  _FunctionQuery_default_instance_.DefaultConstruct();
  _WoWObjectsResult_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014Models.proto\"z\n\007Request\022\033\n\004kind\030\001 \001(\0162"
      "\r.Request.Kind\022\014\n\004data\030\002 \001(\014\"D\n\004Kind\022\020\n\014"
      "MEMORY_QUERY\020\000\022\026\n\022MEMORY_BATCH_QUERY\020\001\022\022"
      "\n\016FUNCTION_QUERY\020\003\"\241\001\n\010Response\022\034\n\004kind\030"
      "\001 \001(\0162\016.Response.Kind\022\014\n\004data\030\002 \001(\014\032\030\n\005E"
      "rror\022\017\n\007message\030\001 \001(\t\"O\n\004Kind\022\t\n\005ERROR\020\000"
      "\022\020\n\014MEMORY_QUERY\020\001\022\026\n\022MEMORY_BATCH_QUERY"
      "\020\002\022\022\n\016FUNCTION_QUERY\020\003\"\220\001\n\013MemoryQuery\022\037"
      "\n\004kind\030\001 \001(\0162\021.MemoryQuery.Kind\022\017\n\007addre"
      "ss\030\002 \001(\r\022\014\n\004data\030\003 \001(\014\022\014\n\004size\030\004 \001(\005\032\026\n\006"
      "Result\022\014\n\004data\030\001 \001(\014\"\033\n\004Kind\022\010\n\004READ\020\000\022\t"
      "\n\005WRITE\020\001\"a\n\020MemoryBatchQuery\022\035\n\007queries"
      "\030\001 \003(\0132\014.MemoryQuery\032.\n\006Result\022$\n\007result"
      "s\030\001 \003(\0132\023.MemoryQuery.Result\"\352\001\n\rFunctio"
      "nQuery\022\014\n\004args\030\001 \003(\014\022!\n\004kind\030\002 \001(\0162\023.Fun"
      "ctionQuery.Kind\032\026\n\006Result\022\014\n\004data\030\001 \001(\014\""
      "\217\001\n\004Kind\022\007\n\003DEV\020\000\022\030\n\024ENUM_VISIBLE_OBJECT"
      "S\020\001\022\022\n\016OBJECT_POINTER\020\003\022\031\n\025ACTIVE_PLAYER"
      "_POINTER\020\004\022\026\n\022ACTIVE_PLAYER_GUID\020\005\022\n\n\006MA"
      "P_ID\020\006\022\021\n\rCLICK_TO_MOVE\020\007\"\314\001\n\020WoWObjects"
      "Result\022\020\n\010pointers\030\001 \003(\r\022\r\n\005guids\030\002 \003(\004\022"
      "%\n\005types\030\003 \003(\0162\026.WoWObjectsResult.Type\"p"
      "\n\004Type\022\010\n\004NONE\020\000\022\010\n\004ITEM\020\001\022\r\n\tCONTAINER\020"
      "\002\022\010\n\004UNIT\020\003\022\n\n\006PLAYER\020\004\022\017\n\013GAME_OBJECT\020\005"
      "\022\022\n\016DYNAMIC_OBJECT\020\006\022\n\n\006CORPSE\020\007b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1000);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Models.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Models_2eproto

const ::google::protobuf::EnumDescriptor* Request_Kind_descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_enum_descriptors[0];
}
bool Request_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Request_Kind Request::MEMORY_QUERY;
const Request_Kind Request::MEMORY_BATCH_QUERY;
const Request_Kind Request::FUNCTION_QUERY;
const Request_Kind Request::Kind_MIN;
const Request_Kind Request::Kind_MAX;
const int Request::Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Response_Kind_descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_enum_descriptors[1];
}
bool Response_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Response_Kind Response::ERROR;
const Response_Kind Response::MEMORY_QUERY;
const Response_Kind Response::MEMORY_BATCH_QUERY;
const Response_Kind Response::FUNCTION_QUERY;
const Response_Kind Response::Kind_MIN;
const Response_Kind Response::Kind_MAX;
const int Response::Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MemoryQuery_Kind_descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_enum_descriptors[2];
}
bool MemoryQuery_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MemoryQuery_Kind MemoryQuery::READ;
const MemoryQuery_Kind MemoryQuery::WRITE;
const MemoryQuery_Kind MemoryQuery::Kind_MIN;
const MemoryQuery_Kind MemoryQuery::Kind_MAX;
const int MemoryQuery::Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FunctionQuery_Kind_descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_enum_descriptors[3];
}
bool FunctionQuery_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FunctionQuery_Kind FunctionQuery::DEV;
const FunctionQuery_Kind FunctionQuery::ENUM_VISIBLE_OBJECTS;
const FunctionQuery_Kind FunctionQuery::OBJECT_POINTER;
const FunctionQuery_Kind FunctionQuery::ACTIVE_PLAYER_POINTER;
const FunctionQuery_Kind FunctionQuery::ACTIVE_PLAYER_GUID;
const FunctionQuery_Kind FunctionQuery::MAP_ID;
const FunctionQuery_Kind FunctionQuery::CLICK_TO_MOVE;
const FunctionQuery_Kind FunctionQuery::Kind_MIN;
const FunctionQuery_Kind FunctionQuery::Kind_MAX;
const int FunctionQuery::Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WoWObjectsResult_Type_descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_enum_descriptors[4];
}
bool WoWObjectsResult_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WoWObjectsResult_Type WoWObjectsResult::NONE;
const WoWObjectsResult_Type WoWObjectsResult::ITEM;
const WoWObjectsResult_Type WoWObjectsResult::CONTAINER;
const WoWObjectsResult_Type WoWObjectsResult::UNIT;
const WoWObjectsResult_Type WoWObjectsResult::PLAYER;
const WoWObjectsResult_Type WoWObjectsResult::GAME_OBJECT;
const WoWObjectsResult_Type WoWObjectsResult::DYNAMIC_OBJECT;
const WoWObjectsResult_Type WoWObjectsResult::CORPSE;
const WoWObjectsResult_Type WoWObjectsResult::Type_MIN;
const WoWObjectsResult_Type WoWObjectsResult::Type_MAX;
const int WoWObjectsResult::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kKindFieldNumber;
const int Request::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Models_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  kind_ = from.kind_;
  // @@protoc_insertion_point(copy_constructor:Request)
}

void Request::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
  _cached_size_ = 0;
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:Request)
  SharedDtor();
}

void Request::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[0].descriptor;
}

const Request& Request::default_instance() {
  protobuf_Models_2eproto::InitDefaults();
  return *internal_default_instance();
}

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Request)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Request.Kind kind = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::Request_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Request)
  // .Request.Kind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Request)
  // .Request.Kind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Request)
  size_t total_size = 0;

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .Request.Kind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  data_.Swap(&other->data_);
  std::swap(kind_, other->kind_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// .Request.Kind kind = 1;
void Request::clear_kind() {
  kind_ = 0;
}
::Request_Kind Request::kind() const {
  // @@protoc_insertion_point(field_get:Request.kind)
  return static_cast< ::Request_Kind >(kind_);
}
void Request::set_kind(::Request_Kind value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:Request.kind)
}

// bytes data = 2;
void Request::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Request::data() const {
  // @@protoc_insertion_point(field_get:Request.data)
  return data_.GetNoArena();
}
void Request::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Request.data)
}
#if LANG_CXX11
void Request::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Request.data)
}
#endif
void Request::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Request.data)
}
void Request::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Request.data)
}
::std::string* Request::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:Request.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Request::release_data() {
  // @@protoc_insertion_point(field_release:Request.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Request::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:Request.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Error::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Error::Response_Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Models_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Error)
}
Response_Error::Response_Error(const Response_Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:Response.Error)
}

void Response_Error::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Response_Error::~Response_Error() {
  // @@protoc_insertion_point(destructor:Response.Error)
  SharedDtor();
}

void Response_Error::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response_Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Error::descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[1].descriptor;
}

const Response_Error& Response_Error::default_instance() {
  protobuf_Models_2eproto::InitDefaults();
  return *internal_default_instance();
}

Response_Error* Response_Error::New(::google::protobuf::Arena* arena) const {
  Response_Error* n = new Response_Error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Error::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Error)
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Response.Error.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Error)
  return false;
#undef DO_
}

void Response_Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Error)
  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Response.Error.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:Response.Error)
}

::google::protobuf::uint8* Response_Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Response.Error)
  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Response.Error.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Response.Error)
  return target;
}

size_t Response_Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Error)
  size_t total_size = 0;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Error)
    MergeFrom(*source);
  }
}

void Response_Error::MergeFrom(const Response_Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void Response_Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Error::CopyFrom(const Response_Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Error::IsInitialized() const {
  return true;
}

void Response_Error::Swap(Response_Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Error::InternalSwap(Response_Error* other) {
  message_.Swap(&other->message_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Error::GetMetadata() const {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response_Error

// string message = 1;
void Response_Error::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Response_Error::message() const {
  // @@protoc_insertion_point(field_get:Response.Error.message)
  return message_.GetNoArena();
}
void Response_Error::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.Error.message)
}
#if LANG_CXX11
void Response_Error::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Response.Error.message)
}
#endif
void Response_Error::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.Error.message)
}
void Response_Error::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.Error.message)
}
::std::string* Response_Error::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:Response.Error.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Response_Error::release_message() {
  // @@protoc_insertion_point(field_release:Response.Error.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Response_Error::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Response.Error.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kKindFieldNumber;
const int Response::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Models_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  kind_ = from.kind_;
  // @@protoc_insertion_point(copy_constructor:Response)
}

void Response::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
  _cached_size_ = 0;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:Response)
  SharedDtor();
}

void Response::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[2].descriptor;
}

const Response& Response::default_instance() {
  protobuf_Models_2eproto::InitDefaults();
  return *internal_default_instance();
}

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Response)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Response.Kind kind = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::Response_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response)
  // .Response.Kind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Response)
  // .Response.Kind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Response)
  size_t total_size = 0;

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .Response.Kind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  data_.Swap(&other->data_);
  std::swap(kind_, other->kind_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response

// .Response.Kind kind = 1;
void Response::clear_kind() {
  kind_ = 0;
}
::Response_Kind Response::kind() const {
  // @@protoc_insertion_point(field_get:Response.kind)
  return static_cast< ::Response_Kind >(kind_);
}
void Response::set_kind(::Response_Kind value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:Response.kind)
}

// bytes data = 2;
void Response::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Response::data() const {
  // @@protoc_insertion_point(field_get:Response.data)
  return data_.GetNoArena();
}
void Response::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.data)
}
#if LANG_CXX11
void Response::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Response.data)
}
#endif
void Response::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.data)
}
void Response::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.data)
}
::std::string* Response::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:Response.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Response::release_data() {
  // @@protoc_insertion_point(field_release:Response.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Response::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:Response.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryQuery_Result::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryQuery_Result::MemoryQuery_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Models_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MemoryQuery.Result)
}
MemoryQuery_Result::MemoryQuery_Result(const MemoryQuery_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:MemoryQuery.Result)
}

void MemoryQuery_Result::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MemoryQuery_Result::~MemoryQuery_Result() {
  // @@protoc_insertion_point(destructor:MemoryQuery.Result)
  SharedDtor();
}

void MemoryQuery_Result::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MemoryQuery_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemoryQuery_Result::descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[3].descriptor;
}

const MemoryQuery_Result& MemoryQuery_Result::default_instance() {
  protobuf_Models_2eproto::InitDefaults();
  return *internal_default_instance();
}

MemoryQuery_Result* MemoryQuery_Result::New(::google::protobuf::Arena* arena) const {
  MemoryQuery_Result* n = new MemoryQuery_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemoryQuery_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:MemoryQuery.Result)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MemoryQuery_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MemoryQuery.Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MemoryQuery.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MemoryQuery.Result)
  return false;
#undef DO_
}

void MemoryQuery_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MemoryQuery.Result)
  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:MemoryQuery.Result)
}

::google::protobuf::uint8* MemoryQuery_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MemoryQuery.Result)
  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MemoryQuery.Result)
  return target;
}

size_t MemoryQuery_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MemoryQuery.Result)
  size_t total_size = 0;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemoryQuery_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MemoryQuery.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryQuery_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryQuery_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MemoryQuery.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MemoryQuery.Result)
    MergeFrom(*source);
  }
}

void MemoryQuery_Result::MergeFrom(const MemoryQuery_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MemoryQuery.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void MemoryQuery_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MemoryQuery.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryQuery_Result::CopyFrom(const MemoryQuery_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MemoryQuery.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryQuery_Result::IsInitialized() const {
  return true;
}

void MemoryQuery_Result::Swap(MemoryQuery_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryQuery_Result::InternalSwap(MemoryQuery_Result* other) {
  data_.Swap(&other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemoryQuery_Result::GetMetadata() const {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MemoryQuery_Result

// bytes data = 1;
void MemoryQuery_Result::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MemoryQuery_Result::data() const {
  // @@protoc_insertion_point(field_get:MemoryQuery.Result.data)
  return data_.GetNoArena();
}
void MemoryQuery_Result::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MemoryQuery.Result.data)
}
#if LANG_CXX11
void MemoryQuery_Result::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MemoryQuery.Result.data)
}
#endif
void MemoryQuery_Result::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MemoryQuery.Result.data)
}
void MemoryQuery_Result::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MemoryQuery.Result.data)
}
::std::string* MemoryQuery_Result::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:MemoryQuery.Result.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MemoryQuery_Result::release_data() {
  // @@protoc_insertion_point(field_release:MemoryQuery.Result.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MemoryQuery_Result::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:MemoryQuery.Result.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryQuery::kKindFieldNumber;
const int MemoryQuery::kAddressFieldNumber;
const int MemoryQuery::kDataFieldNumber;
const int MemoryQuery::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryQuery::MemoryQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Models_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MemoryQuery)
}
MemoryQuery::MemoryQuery(const MemoryQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&kind_, &from.kind_,
    reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&kind_) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:MemoryQuery)
}

void MemoryQuery::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kind_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&kind_) + sizeof(size_));
  _cached_size_ = 0;
}

MemoryQuery::~MemoryQuery() {
  // @@protoc_insertion_point(destructor:MemoryQuery)
  SharedDtor();
}

void MemoryQuery::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MemoryQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemoryQuery::descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[4].descriptor;
}

const MemoryQuery& MemoryQuery::default_instance() {
  protobuf_Models_2eproto::InitDefaults();
  return *internal_default_instance();
}

MemoryQuery* MemoryQuery::New(::google::protobuf::Arena* arena) const {
  MemoryQuery* n = new MemoryQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemoryQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:MemoryQuery)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kind_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&kind_) + sizeof(size_));
}

bool MemoryQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MemoryQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .MemoryQuery.Kind kind = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::MemoryQuery_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 address = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MemoryQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MemoryQuery)
  return false;
#undef DO_
}

void MemoryQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MemoryQuery)
  // .MemoryQuery.Kind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // uint32 address = 2;
  if (this->address() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->address(), output);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  // int32 size = 4;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->size(), output);
  }

  // @@protoc_insertion_point(serialize_end:MemoryQuery)
}

::google::protobuf::uint8* MemoryQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MemoryQuery)
  // .MemoryQuery.Kind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // uint32 address = 2;
  if (this->address() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->address(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  // int32 size = 4;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MemoryQuery)
  return target;
}

size_t MemoryQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MemoryQuery)
  size_t total_size = 0;

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .MemoryQuery.Kind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  // uint32 address = 2;
  if (this->address() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->address());
  }

  // int32 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemoryQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MemoryQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MemoryQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MemoryQuery)
    MergeFrom(*source);
  }
}

void MemoryQuery::MergeFrom(const MemoryQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MemoryQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  if (from.address() != 0) {
    set_address(from.address());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void MemoryQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MemoryQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryQuery::CopyFrom(const MemoryQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MemoryQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryQuery::IsInitialized() const {
  return true;
}

void MemoryQuery::Swap(MemoryQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryQuery::InternalSwap(MemoryQuery* other) {
  data_.Swap(&other->data_);
  std::swap(kind_, other->kind_);
  std::swap(address_, other->address_);
  std::swap(size_, other->size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemoryQuery::GetMetadata() const {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MemoryQuery

// .MemoryQuery.Kind kind = 1;
void MemoryQuery::clear_kind() {
  kind_ = 0;
}
::MemoryQuery_Kind MemoryQuery::kind() const {
  // @@protoc_insertion_point(field_get:MemoryQuery.kind)
  return static_cast< ::MemoryQuery_Kind >(kind_);
}
void MemoryQuery::set_kind(::MemoryQuery_Kind value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:MemoryQuery.kind)
}

// uint32 address = 2;
void MemoryQuery::clear_address() {
  address_ = 0u;
}
::google::protobuf::uint32 MemoryQuery::address() const {
  // @@protoc_insertion_point(field_get:MemoryQuery.address)
  return address_;
}
void MemoryQuery::set_address(::google::protobuf::uint32 value) {
  
  address_ = value;
  // @@protoc_insertion_point(field_set:MemoryQuery.address)
}

// bytes data = 3;
void MemoryQuery::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MemoryQuery::data() const {
  // @@protoc_insertion_point(field_get:MemoryQuery.data)
  return data_.GetNoArena();
}
void MemoryQuery::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MemoryQuery.data)
}
#if LANG_CXX11
void MemoryQuery::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MemoryQuery.data)
}
#endif
void MemoryQuery::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MemoryQuery.data)
}
void MemoryQuery::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MemoryQuery.data)
}
::std::string* MemoryQuery::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:MemoryQuery.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MemoryQuery::release_data() {
  // @@protoc_insertion_point(field_release:MemoryQuery.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MemoryQuery::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:MemoryQuery.data)
}

// int32 size = 4;
void MemoryQuery::clear_size() {
  size_ = 0;
}
::google::protobuf::int32 MemoryQuery::size() const {
  // @@protoc_insertion_point(field_get:MemoryQuery.size)
  return size_;
}
void MemoryQuery::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:MemoryQuery.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryBatchQuery_Result::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryBatchQuery_Result::MemoryBatchQuery_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Models_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MemoryBatchQuery.Result)
}
MemoryBatchQuery_Result::MemoryBatchQuery_Result(const MemoryBatchQuery_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MemoryBatchQuery.Result)
}

void MemoryBatchQuery_Result::SharedCtor() {
  _cached_size_ = 0;
}

MemoryBatchQuery_Result::~MemoryBatchQuery_Result() {
  // @@protoc_insertion_point(destructor:MemoryBatchQuery.Result)
  SharedDtor();
}

void MemoryBatchQuery_Result::SharedDtor() {
}

void MemoryBatchQuery_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemoryBatchQuery_Result::descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[5].descriptor;
}

const MemoryBatchQuery_Result& MemoryBatchQuery_Result::default_instance() {
  protobuf_Models_2eproto::InitDefaults();
  return *internal_default_instance();
}

MemoryBatchQuery_Result* MemoryBatchQuery_Result::New(::google::protobuf::Arena* arena) const {
  MemoryBatchQuery_Result* n = new MemoryBatchQuery_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemoryBatchQuery_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:MemoryBatchQuery.Result)
  results_.Clear();
}

bool MemoryBatchQuery_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MemoryBatchQuery.Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MemoryQuery.Result results = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MemoryBatchQuery.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MemoryBatchQuery.Result)
  return false;
#undef DO_
}

void MemoryBatchQuery_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MemoryBatchQuery.Result)
  // repeated .MemoryQuery.Result results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MemoryBatchQuery.Result)
}

::google::protobuf::uint8* MemoryBatchQuery_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MemoryBatchQuery.Result)
  // repeated .MemoryQuery.Result results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->results(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MemoryBatchQuery.Result)
  return target;
}

size_t MemoryBatchQuery_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MemoryBatchQuery.Result)
  size_t total_size = 0;

  // repeated .MemoryQuery.Result results = 1;
  {
    unsigned int count = this->results_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->results(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemoryBatchQuery_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MemoryBatchQuery.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryBatchQuery_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryBatchQuery_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MemoryBatchQuery.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MemoryBatchQuery.Result)
    MergeFrom(*source);
  }
}

void MemoryBatchQuery_Result::MergeFrom(const MemoryBatchQuery_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MemoryBatchQuery.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  results_.MergeFrom(from.results_);
}

void MemoryBatchQuery_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MemoryBatchQuery.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryBatchQuery_Result::CopyFrom(const MemoryBatchQuery_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MemoryBatchQuery.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryBatchQuery_Result::IsInitialized() const {
  return true;
}

void MemoryBatchQuery_Result::Swap(MemoryBatchQuery_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryBatchQuery_Result::InternalSwap(MemoryBatchQuery_Result* other) {
  results_.UnsafeArenaSwap(&other->results_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemoryBatchQuery_Result::GetMetadata() const {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MemoryBatchQuery_Result

// repeated .MemoryQuery.Result results = 1;
int MemoryBatchQuery_Result::results_size() const {
  return results_.size();
}
void MemoryBatchQuery_Result::clear_results() {
  results_.Clear();
}
const ::MemoryQuery_Result& MemoryBatchQuery_Result::results(int index) const {
  // @@protoc_insertion_point(field_get:MemoryBatchQuery.Result.results)
  return results_.Get(index);
}
::MemoryQuery_Result* MemoryBatchQuery_Result::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:MemoryBatchQuery.Result.results)
  return results_.Mutable(index);
}
::MemoryQuery_Result* MemoryBatchQuery_Result::add_results() {
  // @@protoc_insertion_point(field_add:MemoryBatchQuery.Result.results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::MemoryQuery_Result >*
MemoryBatchQuery_Result::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:MemoryBatchQuery.Result.results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::MemoryQuery_Result >&
MemoryBatchQuery_Result::results() const {
  // @@protoc_insertion_point(field_list:MemoryBatchQuery.Result.results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryBatchQuery::kQueriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryBatchQuery::MemoryBatchQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Models_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MemoryBatchQuery)
}
MemoryBatchQuery::MemoryBatchQuery(const MemoryBatchQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      queries_(from.queries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MemoryBatchQuery)
}

void MemoryBatchQuery::SharedCtor() {
  _cached_size_ = 0;
}

MemoryBatchQuery::~MemoryBatchQuery() {
  // @@protoc_insertion_point(destructor:MemoryBatchQuery)
  SharedDtor();
}

void MemoryBatchQuery::SharedDtor() {
}

void MemoryBatchQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemoryBatchQuery::descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[6].descriptor;
}

const MemoryBatchQuery& MemoryBatchQuery::default_instance() {
  protobuf_Models_2eproto::InitDefaults();
  return *internal_default_instance();
}

MemoryBatchQuery* MemoryBatchQuery::New(::google::protobuf::Arena* arena) const {
  MemoryBatchQuery* n = new MemoryBatchQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemoryBatchQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:MemoryBatchQuery)
  queries_.Clear();
}

bool MemoryBatchQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MemoryBatchQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MemoryQuery queries = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_queries()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MemoryBatchQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MemoryBatchQuery)
  return false;
#undef DO_
}

void MemoryBatchQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MemoryBatchQuery)
  // repeated .MemoryQuery queries = 1;
  for (unsigned int i = 0, n = this->queries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->queries(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MemoryBatchQuery)
}

::google::protobuf::uint8* MemoryBatchQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MemoryBatchQuery)
  // repeated .MemoryQuery queries = 1;
  for (unsigned int i = 0, n = this->queries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->queries(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MemoryBatchQuery)
  return target;
}

size_t MemoryBatchQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MemoryBatchQuery)
  size_t total_size = 0;

  // repeated .MemoryQuery queries = 1;
  {
    unsigned int count = this->queries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queries(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemoryBatchQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MemoryBatchQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryBatchQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryBatchQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MemoryBatchQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MemoryBatchQuery)
    MergeFrom(*source);
  }
}

void MemoryBatchQuery::MergeFrom(const MemoryBatchQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MemoryBatchQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  queries_.MergeFrom(from.queries_);
}

void MemoryBatchQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MemoryBatchQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryBatchQuery::CopyFrom(const MemoryBatchQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MemoryBatchQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryBatchQuery::IsInitialized() const {
  return true;
}

void MemoryBatchQuery::Swap(MemoryBatchQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryBatchQuery::InternalSwap(MemoryBatchQuery* other) {
  queries_.UnsafeArenaSwap(&other->queries_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemoryBatchQuery::GetMetadata() const {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MemoryBatchQuery

// repeated .MemoryQuery queries = 1;
int MemoryBatchQuery::queries_size() const {
  return queries_.size();
}
void MemoryBatchQuery::clear_queries() {
  queries_.Clear();
}
const ::MemoryQuery& MemoryBatchQuery::queries(int index) const {
  // @@protoc_insertion_point(field_get:MemoryBatchQuery.queries)
  return queries_.Get(index);
}
::MemoryQuery* MemoryBatchQuery::mutable_queries(int index) {
  // @@protoc_insertion_point(field_mutable:MemoryBatchQuery.queries)
  return queries_.Mutable(index);
}
::MemoryQuery* MemoryBatchQuery::add_queries() {
  // @@protoc_insertion_point(field_add:MemoryBatchQuery.queries)
  return queries_.Add();
}
::google::protobuf::RepeatedPtrField< ::MemoryQuery >*
MemoryBatchQuery::mutable_queries() {
  // @@protoc_insertion_point(field_mutable_list:MemoryBatchQuery.queries)
  return &queries_;
}
const ::google::protobuf::RepeatedPtrField< ::MemoryQuery >&
MemoryBatchQuery::queries() const {
  // @@protoc_insertion_point(field_list:MemoryBatchQuery.queries)
  return queries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionQuery_Result::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionQuery_Result::FunctionQuery_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Models_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FunctionQuery.Result)
}
FunctionQuery_Result::FunctionQuery_Result(const FunctionQuery_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:FunctionQuery.Result)
}

void FunctionQuery_Result::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FunctionQuery_Result::~FunctionQuery_Result() {
  // @@protoc_insertion_point(destructor:FunctionQuery.Result)
  SharedDtor();
}

void FunctionQuery_Result::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FunctionQuery_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionQuery_Result::descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[7].descriptor;
}

const FunctionQuery_Result& FunctionQuery_Result::default_instance() {
  protobuf_Models_2eproto::InitDefaults();
  return *internal_default_instance();
}

FunctionQuery_Result* FunctionQuery_Result::New(::google::protobuf::Arena* arena) const {
  FunctionQuery_Result* n = new FunctionQuery_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FunctionQuery_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:FunctionQuery.Result)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FunctionQuery_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FunctionQuery.Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FunctionQuery.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FunctionQuery.Result)
  return false;
#undef DO_
}

void FunctionQuery_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FunctionQuery.Result)
  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:FunctionQuery.Result)
}

::google::protobuf::uint8* FunctionQuery_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FunctionQuery.Result)
  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:FunctionQuery.Result)
  return target;
}

size_t FunctionQuery_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FunctionQuery.Result)
  size_t total_size = 0;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionQuery_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FunctionQuery.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionQuery_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionQuery_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FunctionQuery.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FunctionQuery.Result)
    MergeFrom(*source);
  }
}

void FunctionQuery_Result::MergeFrom(const FunctionQuery_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FunctionQuery.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void FunctionQuery_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FunctionQuery.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionQuery_Result::CopyFrom(const FunctionQuery_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FunctionQuery.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionQuery_Result::IsInitialized() const {
  return true;
}

void FunctionQuery_Result::Swap(FunctionQuery_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FunctionQuery_Result::InternalSwap(FunctionQuery_Result* other) {
  data_.Swap(&other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FunctionQuery_Result::GetMetadata() const {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FunctionQuery_Result

// bytes data = 1;
void FunctionQuery_Result::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FunctionQuery_Result::data() const {
  // @@protoc_insertion_point(field_get:FunctionQuery.Result.data)
  return data_.GetNoArena();
}
void FunctionQuery_Result::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FunctionQuery.Result.data)
}
#if LANG_CXX11
void FunctionQuery_Result::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FunctionQuery.Result.data)
}
#endif
void FunctionQuery_Result::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FunctionQuery.Result.data)
}
void FunctionQuery_Result::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FunctionQuery.Result.data)
}
::std::string* FunctionQuery_Result::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:FunctionQuery.Result.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FunctionQuery_Result::release_data() {
  // @@protoc_insertion_point(field_release:FunctionQuery.Result.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FunctionQuery_Result::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:FunctionQuery.Result.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionQuery::kArgsFieldNumber;
const int FunctionQuery::kKindFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionQuery::FunctionQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Models_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FunctionQuery)
}
FunctionQuery::FunctionQuery(const FunctionQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      args_(from.args_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kind_ = from.kind_;
  // @@protoc_insertion_point(copy_constructor:FunctionQuery)
}

void FunctionQuery::SharedCtor() {
  kind_ = 0;
  _cached_size_ = 0;
}

FunctionQuery::~FunctionQuery() {
  // @@protoc_insertion_point(destructor:FunctionQuery)
  SharedDtor();
}

void FunctionQuery::SharedDtor() {
}

void FunctionQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionQuery::descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[8].descriptor;
}

const FunctionQuery& FunctionQuery::default_instance() {
  protobuf_Models_2eproto::InitDefaults();
  return *internal_default_instance();
}

FunctionQuery* FunctionQuery::New(::google::protobuf::Arena* arena) const {
  FunctionQuery* n = new FunctionQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FunctionQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:FunctionQuery)
  args_.Clear();
  kind_ = 0;
}

bool FunctionQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FunctionQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes args = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FunctionQuery.Kind kind = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::FunctionQuery_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FunctionQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FunctionQuery)
  return false;
#undef DO_
}

void FunctionQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FunctionQuery)
  // repeated bytes args = 1;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->args(i), output);
  }

  // .FunctionQuery.Kind kind = 2;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->kind(), output);
  }

  // @@protoc_insertion_point(serialize_end:FunctionQuery)
}

::google::protobuf::uint8* FunctionQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FunctionQuery)
  // repeated bytes args = 1;
  for (int i = 0; i < this->args_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->args(i), target);
  }

  // .FunctionQuery.Kind kind = 2;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->kind(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:FunctionQuery)
  return target;
}

size_t FunctionQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FunctionQuery)
  size_t total_size = 0;

  // repeated bytes args = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->args_size());
  for (int i = 0; i < this->args_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->args(i));
  }

  // .FunctionQuery.Kind kind = 2;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FunctionQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FunctionQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FunctionQuery)
    MergeFrom(*source);
  }
}

void FunctionQuery::MergeFrom(const FunctionQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FunctionQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  args_.MergeFrom(from.args_);
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void FunctionQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FunctionQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionQuery::CopyFrom(const FunctionQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FunctionQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionQuery::IsInitialized() const {
  return true;
}

void FunctionQuery::Swap(FunctionQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FunctionQuery::InternalSwap(FunctionQuery* other) {
  args_.UnsafeArenaSwap(&other->args_);
  std::swap(kind_, other->kind_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FunctionQuery::GetMetadata() const {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FunctionQuery

// repeated bytes args = 1;
int FunctionQuery::args_size() const {
  return args_.size();
}
void FunctionQuery::clear_args() {
  args_.Clear();
}
const ::std::string& FunctionQuery::args(int index) const {
  // @@protoc_insertion_point(field_get:FunctionQuery.args)
  return args_.Get(index);
}
::std::string* FunctionQuery::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:FunctionQuery.args)
  return args_.Mutable(index);
}
void FunctionQuery::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:FunctionQuery.args)
  args_.Mutable(index)->assign(value);
}
void FunctionQuery::set_args(int index, const char* value) {
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:FunctionQuery.args)
}
void FunctionQuery::set_args(int index, const void* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FunctionQuery.args)
}
::std::string* FunctionQuery::add_args() {
  // @@protoc_insertion_point(field_add_mutable:FunctionQuery.args)
  return args_.Add();
}
void FunctionQuery::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:FunctionQuery.args)
}
void FunctionQuery::add_args(const char* value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:FunctionQuery.args)
}
void FunctionQuery::add_args(const void* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:FunctionQuery.args)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
FunctionQuery::args() const {
  // @@protoc_insertion_point(field_list:FunctionQuery.args)
  return args_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
FunctionQuery::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:FunctionQuery.args)
  return &args_;
}

// .FunctionQuery.Kind kind = 2;
void FunctionQuery::clear_kind() {
  kind_ = 0;
}
::FunctionQuery_Kind FunctionQuery::kind() const {
  // @@protoc_insertion_point(field_get:FunctionQuery.kind)
  return static_cast< ::FunctionQuery_Kind >(kind_);
}
void FunctionQuery::set_kind(::FunctionQuery_Kind value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:FunctionQuery.kind)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WoWObjectsResult::kPointersFieldNumber;
const int WoWObjectsResult::kGuidsFieldNumber;
const int WoWObjectsResult::kTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WoWObjectsResult::WoWObjectsResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Models_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WoWObjectsResult)
}
WoWObjectsResult::WoWObjectsResult(const WoWObjectsResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pointers_(from.pointers_),
      guids_(from.guids_),
      types_(from.types_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:WoWObjectsResult)
}

void WoWObjectsResult::SharedCtor() {
  _cached_size_ = 0;
}

WoWObjectsResult::~WoWObjectsResult() {
  // @@protoc_insertion_point(destructor:WoWObjectsResult)
  SharedDtor();
}

void WoWObjectsResult::SharedDtor() {
}

void WoWObjectsResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WoWObjectsResult::descriptor() {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[9].descriptor;
}

const WoWObjectsResult& WoWObjectsResult::default_instance() {
  protobuf_Models_2eproto::InitDefaults();
  return *internal_default_instance();
}

WoWObjectsResult* WoWObjectsResult::New(::google::protobuf::Arena* arena) const {
  WoWObjectsResult* n = new WoWObjectsResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WoWObjectsResult::Clear() {
// @@protoc_insertion_point(message_clear_start:WoWObjectsResult)
  pointers_.Clear();
  guids_.Clear();
  types_.Clear();
}

bool WoWObjectsResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WoWObjectsResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 pointers = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pointers())));
        } else if (tag == 8u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_pointers())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 guids = 2;
      case 2: {
        if (tag == 18u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_guids())));
        } else if (tag == 16u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .WoWObjectsResult.Type types = 3;
      case 3: {
        if (tag == 26u) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_types(static_cast< ::WoWObjectsResult_Type >(value));
          }
          input->PopLimit(limit);
        } else if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_types(static_cast< ::WoWObjectsResult_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WoWObjectsResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WoWObjectsResult)
  return false;
#undef DO_
}

void WoWObjectsResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WoWObjectsResult)
  // repeated uint32 pointers = 1;
  if (this->pointers_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pointers_cached_byte_size_);
  }
  for (int i = 0; i < this->pointers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->pointers(i), output);
  }

  // repeated uint64 guids = 2;
  if (this->guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_guids_cached_byte_size_);
  }
  for (int i = 0; i < this->guids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->guids(i), output);
  }

  // repeated .WoWObjectsResult.Type types = 3;
  if (this->types_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_types_cached_byte_size_);
  }
  for (int i = 0; i < this->types_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->types(i), output);
  }

  // @@protoc_insertion_point(serialize_end:WoWObjectsResult)
}

::google::protobuf::uint8* WoWObjectsResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WoWObjectsResult)
  // repeated uint32 pointers = 1;
  if (this->pointers_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pointers_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pointers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->pointers(i), target);
  }

  // repeated uint64 guids = 2;
  if (this->guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _guids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->guids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->guids(i), target);
  }

  // repeated .WoWObjectsResult.Type types = 3;
  if (this->types_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _types_cached_byte_size_, target);
  }
  for (int i = 0; i < this->types_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->types(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:WoWObjectsResult)
  return target;
}

size_t WoWObjectsResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WoWObjectsResult)
  size_t total_size = 0;

  // repeated uint32 pointers = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->pointers_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pointers_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 guids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .WoWObjectsResult.Type types = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->types_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->types(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _types_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WoWObjectsResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WoWObjectsResult)
  GOOGLE_DCHECK_NE(&from, this);
  const WoWObjectsResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WoWObjectsResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WoWObjectsResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WoWObjectsResult)
    MergeFrom(*source);
  }
}

void WoWObjectsResult::MergeFrom(const WoWObjectsResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WoWObjectsResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pointers_.MergeFrom(from.pointers_);
  guids_.MergeFrom(from.guids_);
  types_.MergeFrom(from.types_);
}

void WoWObjectsResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WoWObjectsResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WoWObjectsResult::CopyFrom(const WoWObjectsResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WoWObjectsResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WoWObjectsResult::IsInitialized() const {
  return true;
}

void WoWObjectsResult::Swap(WoWObjectsResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WoWObjectsResult::InternalSwap(WoWObjectsResult* other) {
  pointers_.UnsafeArenaSwap(&other->pointers_);
  guids_.UnsafeArenaSwap(&other->guids_);
  types_.UnsafeArenaSwap(&other->types_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WoWObjectsResult::GetMetadata() const {
  protobuf_Models_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Models_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WoWObjectsResult

// repeated uint32 pointers = 1;
int WoWObjectsResult::pointers_size() const {
  return pointers_.size();
}
void WoWObjectsResult::clear_pointers() {
  pointers_.Clear();
}
::google::protobuf::uint32 WoWObjectsResult::pointers(int index) const {
  // @@protoc_insertion_point(field_get:WoWObjectsResult.pointers)
  return pointers_.Get(index);
}
void WoWObjectsResult::set_pointers(int index, ::google::protobuf::uint32 value) {
  pointers_.Set(index, value);
  // @@protoc_insertion_point(field_set:WoWObjectsResult.pointers)
}
void WoWObjectsResult::add_pointers(::google::protobuf::uint32 value) {
  pointers_.Add(value);
  // @@protoc_insertion_point(field_add:WoWObjectsResult.pointers)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WoWObjectsResult::pointers() const {
  // @@protoc_insertion_point(field_list:WoWObjectsResult.pointers)
  return pointers_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WoWObjectsResult::mutable_pointers() {
  // @@protoc_insertion_point(field_mutable_list:WoWObjectsResult.pointers)
  return &pointers_;
}

// repeated uint64 guids = 2;
int WoWObjectsResult::guids_size() const {
  return guids_.size();
}
void WoWObjectsResult::clear_guids() {
  guids_.Clear();
}
::google::protobuf::uint64 WoWObjectsResult::guids(int index) const {
  // @@protoc_insertion_point(field_get:WoWObjectsResult.guids)
  return guids_.Get(index);
}
void WoWObjectsResult::set_guids(int index, ::google::protobuf::uint64 value) {
  guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:WoWObjectsResult.guids)
}
void WoWObjectsResult::add_guids(::google::protobuf::uint64 value) {
  guids_.Add(value);
  // @@protoc_insertion_point(field_add:WoWObjectsResult.guids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
WoWObjectsResult::guids() const {
  // @@protoc_insertion_point(field_list:WoWObjectsResult.guids)
  return guids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
WoWObjectsResult::mutable_guids() {
  // @@protoc_insertion_point(field_mutable_list:WoWObjectsResult.guids)
  return &guids_;
}

// repeated .WoWObjectsResult.Type types = 3;
int WoWObjectsResult::types_size() const {
  return types_.size();
}
void WoWObjectsResult::clear_types() {
  types_.Clear();
}
::WoWObjectsResult_Type WoWObjectsResult::types(int index) const {
  // @@protoc_insertion_point(field_get:WoWObjectsResult.types)
  return static_cast< ::WoWObjectsResult_Type >(types_.Get(index));
}
void WoWObjectsResult::set_types(int index, ::WoWObjectsResult_Type value) {
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:WoWObjectsResult.types)
}
void WoWObjectsResult::add_types(::WoWObjectsResult_Type value) {
  types_.Add(value);
  // @@protoc_insertion_point(field_add:WoWObjectsResult.types)
}
const ::google::protobuf::RepeatedField<int>&
WoWObjectsResult::types() const {
  // @@protoc_insertion_point(field_list:WoWObjectsResult.types)
  return types_;
}
::google::protobuf::RepeatedField<int>*
WoWObjectsResult::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:WoWObjectsResult.types)
  return &types_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
