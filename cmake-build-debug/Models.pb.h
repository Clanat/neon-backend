// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Models.proto

#ifndef PROTOBUF_Models_2eproto__INCLUDED
#define PROTOBUF_Models_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class FunctionQuery;
class FunctionQueryDefaultTypeInternal;
extern FunctionQueryDefaultTypeInternal _FunctionQuery_default_instance_;
class FunctionQuery_Result;
class FunctionQuery_ResultDefaultTypeInternal;
extern FunctionQuery_ResultDefaultTypeInternal _FunctionQuery_Result_default_instance_;
class MemoryBatchQuery;
class MemoryBatchQueryDefaultTypeInternal;
extern MemoryBatchQueryDefaultTypeInternal _MemoryBatchQuery_default_instance_;
class MemoryBatchQuery_Result;
class MemoryBatchQuery_ResultDefaultTypeInternal;
extern MemoryBatchQuery_ResultDefaultTypeInternal _MemoryBatchQuery_Result_default_instance_;
class MemoryQuery;
class MemoryQueryDefaultTypeInternal;
extern MemoryQueryDefaultTypeInternal _MemoryQuery_default_instance_;
class MemoryQuery_Result;
class MemoryQuery_ResultDefaultTypeInternal;
extern MemoryQuery_ResultDefaultTypeInternal _MemoryQuery_Result_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class Response_Error;
class Response_ErrorDefaultTypeInternal;
extern Response_ErrorDefaultTypeInternal _Response_Error_default_instance_;
class WoWObjectsResult;
class WoWObjectsResultDefaultTypeInternal;
extern WoWObjectsResultDefaultTypeInternal _WoWObjectsResult_default_instance_;

namespace protobuf_Models_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Models_2eproto

enum Request_Kind {
  Request_Kind_MEMORY_QUERY = 0,
  Request_Kind_MEMORY_BATCH_QUERY = 1,
  Request_Kind_FUNCTION_QUERY = 3,
  Request_Kind_Request_Kind_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Request_Kind_Request_Kind_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Request_Kind_IsValid(int value);
const Request_Kind Request_Kind_Kind_MIN = Request_Kind_MEMORY_QUERY;
const Request_Kind Request_Kind_Kind_MAX = Request_Kind_FUNCTION_QUERY;
const int Request_Kind_Kind_ARRAYSIZE = Request_Kind_Kind_MAX + 1;

const ::google::protobuf::EnumDescriptor* Request_Kind_descriptor();
inline const ::std::string& Request_Kind_Name(Request_Kind value) {
  return ::google::protobuf::internal::NameOfEnum(
    Request_Kind_descriptor(), value);
}
inline bool Request_Kind_Parse(
    const ::std::string& name, Request_Kind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Request_Kind>(
    Request_Kind_descriptor(), name, value);
}
enum Response_Kind {
  Response_Kind_ERROR = 0,
  Response_Kind_MEMORY_QUERY = 1,
  Response_Kind_MEMORY_BATCH_QUERY = 2,
  Response_Kind_FUNCTION_QUERY = 3,
  Response_Kind_Response_Kind_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Response_Kind_Response_Kind_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Response_Kind_IsValid(int value);
const Response_Kind Response_Kind_Kind_MIN = Response_Kind_ERROR;
const Response_Kind Response_Kind_Kind_MAX = Response_Kind_FUNCTION_QUERY;
const int Response_Kind_Kind_ARRAYSIZE = Response_Kind_Kind_MAX + 1;

const ::google::protobuf::EnumDescriptor* Response_Kind_descriptor();
inline const ::std::string& Response_Kind_Name(Response_Kind value) {
  return ::google::protobuf::internal::NameOfEnum(
    Response_Kind_descriptor(), value);
}
inline bool Response_Kind_Parse(
    const ::std::string& name, Response_Kind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Response_Kind>(
    Response_Kind_descriptor(), name, value);
}
enum MemoryQuery_Kind {
  MemoryQuery_Kind_READ = 0,
  MemoryQuery_Kind_WRITE = 1,
  MemoryQuery_Kind_MemoryQuery_Kind_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MemoryQuery_Kind_MemoryQuery_Kind_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MemoryQuery_Kind_IsValid(int value);
const MemoryQuery_Kind MemoryQuery_Kind_Kind_MIN = MemoryQuery_Kind_READ;
const MemoryQuery_Kind MemoryQuery_Kind_Kind_MAX = MemoryQuery_Kind_WRITE;
const int MemoryQuery_Kind_Kind_ARRAYSIZE = MemoryQuery_Kind_Kind_MAX + 1;

const ::google::protobuf::EnumDescriptor* MemoryQuery_Kind_descriptor();
inline const ::std::string& MemoryQuery_Kind_Name(MemoryQuery_Kind value) {
  return ::google::protobuf::internal::NameOfEnum(
    MemoryQuery_Kind_descriptor(), value);
}
inline bool MemoryQuery_Kind_Parse(
    const ::std::string& name, MemoryQuery_Kind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MemoryQuery_Kind>(
    MemoryQuery_Kind_descriptor(), name, value);
}
enum FunctionQuery_Kind {
  FunctionQuery_Kind_DEV = 0,
  FunctionQuery_Kind_ENUM_VISIBLE_OBJECTS = 1,
  FunctionQuery_Kind_OBJECT_POINTER = 3,
  FunctionQuery_Kind_ACTIVE_PLAYER_POINTER = 4,
  FunctionQuery_Kind_ACTIVE_PLAYER_GUID = 5,
  FunctionQuery_Kind_MAP_ID = 6,
  FunctionQuery_Kind_CLICK_TO_MOVE = 7,
  FunctionQuery_Kind_FunctionQuery_Kind_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FunctionQuery_Kind_FunctionQuery_Kind_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FunctionQuery_Kind_IsValid(int value);
const FunctionQuery_Kind FunctionQuery_Kind_Kind_MIN = FunctionQuery_Kind_DEV;
const FunctionQuery_Kind FunctionQuery_Kind_Kind_MAX = FunctionQuery_Kind_CLICK_TO_MOVE;
const int FunctionQuery_Kind_Kind_ARRAYSIZE = FunctionQuery_Kind_Kind_MAX + 1;

const ::google::protobuf::EnumDescriptor* FunctionQuery_Kind_descriptor();
inline const ::std::string& FunctionQuery_Kind_Name(FunctionQuery_Kind value) {
  return ::google::protobuf::internal::NameOfEnum(
    FunctionQuery_Kind_descriptor(), value);
}
inline bool FunctionQuery_Kind_Parse(
    const ::std::string& name, FunctionQuery_Kind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FunctionQuery_Kind>(
    FunctionQuery_Kind_descriptor(), name, value);
}
enum WoWObjectsResult_Type {
  WoWObjectsResult_Type_NONE = 0,
  WoWObjectsResult_Type_ITEM = 1,
  WoWObjectsResult_Type_CONTAINER = 2,
  WoWObjectsResult_Type_UNIT = 3,
  WoWObjectsResult_Type_PLAYER = 4,
  WoWObjectsResult_Type_GAME_OBJECT = 5,
  WoWObjectsResult_Type_DYNAMIC_OBJECT = 6,
  WoWObjectsResult_Type_CORPSE = 7,
  WoWObjectsResult_Type_WoWObjectsResult_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WoWObjectsResult_Type_WoWObjectsResult_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WoWObjectsResult_Type_IsValid(int value);
const WoWObjectsResult_Type WoWObjectsResult_Type_Type_MIN = WoWObjectsResult_Type_NONE;
const WoWObjectsResult_Type WoWObjectsResult_Type_Type_MAX = WoWObjectsResult_Type_CORPSE;
const int WoWObjectsResult_Type_Type_ARRAYSIZE = WoWObjectsResult_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* WoWObjectsResult_Type_descriptor();
inline const ::std::string& WoWObjectsResult_Type_Name(WoWObjectsResult_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    WoWObjectsResult_Type_descriptor(), value);
}
inline bool WoWObjectsResult_Type_Parse(
    const ::std::string& name, WoWObjectsResult_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WoWObjectsResult_Type>(
    WoWObjectsResult_Type_descriptor(), name, value);
}
// ===================================================================

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Request_Kind Kind;
  static const Kind MEMORY_QUERY =
    Request_Kind_MEMORY_QUERY;
  static const Kind MEMORY_BATCH_QUERY =
    Request_Kind_MEMORY_BATCH_QUERY;
  static const Kind FUNCTION_QUERY =
    Request_Kind_FUNCTION_QUERY;
  static inline bool Kind_IsValid(int value) {
    return Request_Kind_IsValid(value);
  }
  static const Kind Kind_MIN =
    Request_Kind_Kind_MIN;
  static const Kind Kind_MAX =
    Request_Kind_Kind_MAX;
  static const int Kind_ARRAYSIZE =
    Request_Kind_Kind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Kind_descriptor() {
    return Request_Kind_descriptor();
  }
  static inline const ::std::string& Kind_Name(Kind value) {
    return Request_Kind_Name(value);
  }
  static inline bool Kind_Parse(const ::std::string& name,
      Kind* value) {
    return Request_Kind_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .Request.Kind kind = 1;
  void clear_kind();
  static const int kKindFieldNumber = 1;
  ::Request_Kind kind() const;
  void set_kind(::Request_Kind value);

  // @@protoc_insertion_point(class_scope:Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  int kind_;
  mutable int _cached_size_;
  friend struct  protobuf_Models_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_Error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Error) */ {
 public:
  Response_Error();
  virtual ~Response_Error();

  Response_Error(const Response_Error& from);

  inline Response_Error& operator=(const Response_Error& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Error& default_instance();

  static inline const Response_Error* internal_default_instance() {
    return reinterpret_cast<const Response_Error*>(
               &_Response_Error_default_instance_);
  }

  void Swap(Response_Error* other);

  // implements Message ----------------------------------------------

  inline Response_Error* New() const PROTOBUF_FINAL { return New(NULL); }

  Response_Error* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response_Error& from);
  void MergeFrom(const Response_Error& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response_Error* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:Response.Error)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend struct  protobuf_Models_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Response_Error Error;

  typedef Response_Kind Kind;
  static const Kind ERROR =
    Response_Kind_ERROR;
  static const Kind MEMORY_QUERY =
    Response_Kind_MEMORY_QUERY;
  static const Kind MEMORY_BATCH_QUERY =
    Response_Kind_MEMORY_BATCH_QUERY;
  static const Kind FUNCTION_QUERY =
    Response_Kind_FUNCTION_QUERY;
  static inline bool Kind_IsValid(int value) {
    return Response_Kind_IsValid(value);
  }
  static const Kind Kind_MIN =
    Response_Kind_Kind_MIN;
  static const Kind Kind_MAX =
    Response_Kind_Kind_MAX;
  static const int Kind_ARRAYSIZE =
    Response_Kind_Kind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Kind_descriptor() {
    return Response_Kind_descriptor();
  }
  static inline const ::std::string& Kind_Name(Kind value) {
    return Response_Kind_Name(value);
  }
  static inline bool Kind_Parse(const ::std::string& name,
      Kind* value) {
    return Response_Kind_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .Response.Kind kind = 1;
  void clear_kind();
  static const int kKindFieldNumber = 1;
  ::Response_Kind kind() const;
  void set_kind(::Response_Kind value);

  // @@protoc_insertion_point(class_scope:Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  int kind_;
  mutable int _cached_size_;
  friend struct  protobuf_Models_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MemoryQuery_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MemoryQuery.Result) */ {
 public:
  MemoryQuery_Result();
  virtual ~MemoryQuery_Result();

  MemoryQuery_Result(const MemoryQuery_Result& from);

  inline MemoryQuery_Result& operator=(const MemoryQuery_Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemoryQuery_Result& default_instance();

  static inline const MemoryQuery_Result* internal_default_instance() {
    return reinterpret_cast<const MemoryQuery_Result*>(
               &_MemoryQuery_Result_default_instance_);
  }

  void Swap(MemoryQuery_Result* other);

  // implements Message ----------------------------------------------

  inline MemoryQuery_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  MemoryQuery_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MemoryQuery_Result& from);
  void MergeFrom(const MemoryQuery_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MemoryQuery_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:MemoryQuery.Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend struct  protobuf_Models_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MemoryQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MemoryQuery) */ {
 public:
  MemoryQuery();
  virtual ~MemoryQuery();

  MemoryQuery(const MemoryQuery& from);

  inline MemoryQuery& operator=(const MemoryQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemoryQuery& default_instance();

  static inline const MemoryQuery* internal_default_instance() {
    return reinterpret_cast<const MemoryQuery*>(
               &_MemoryQuery_default_instance_);
  }

  void Swap(MemoryQuery* other);

  // implements Message ----------------------------------------------

  inline MemoryQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  MemoryQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MemoryQuery& from);
  void MergeFrom(const MemoryQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MemoryQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MemoryQuery_Result Result;

  typedef MemoryQuery_Kind Kind;
  static const Kind READ =
    MemoryQuery_Kind_READ;
  static const Kind WRITE =
    MemoryQuery_Kind_WRITE;
  static inline bool Kind_IsValid(int value) {
    return MemoryQuery_Kind_IsValid(value);
  }
  static const Kind Kind_MIN =
    MemoryQuery_Kind_Kind_MIN;
  static const Kind Kind_MAX =
    MemoryQuery_Kind_Kind_MAX;
  static const int Kind_ARRAYSIZE =
    MemoryQuery_Kind_Kind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Kind_descriptor() {
    return MemoryQuery_Kind_descriptor();
  }
  static inline const ::std::string& Kind_Name(Kind value) {
    return MemoryQuery_Kind_Name(value);
  }
  static inline bool Kind_Parse(const ::std::string& name,
      Kind* value) {
    return MemoryQuery_Kind_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .MemoryQuery.Kind kind = 1;
  void clear_kind();
  static const int kKindFieldNumber = 1;
  ::MemoryQuery_Kind kind() const;
  void set_kind(::MemoryQuery_Kind value);

  // uint32 address = 2;
  void clear_address();
  static const int kAddressFieldNumber = 2;
  ::google::protobuf::uint32 address() const;
  void set_address(::google::protobuf::uint32 value);

  // int32 size = 4;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MemoryQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  int kind_;
  ::google::protobuf::uint32 address_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend struct  protobuf_Models_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MemoryBatchQuery_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MemoryBatchQuery.Result) */ {
 public:
  MemoryBatchQuery_Result();
  virtual ~MemoryBatchQuery_Result();

  MemoryBatchQuery_Result(const MemoryBatchQuery_Result& from);

  inline MemoryBatchQuery_Result& operator=(const MemoryBatchQuery_Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemoryBatchQuery_Result& default_instance();

  static inline const MemoryBatchQuery_Result* internal_default_instance() {
    return reinterpret_cast<const MemoryBatchQuery_Result*>(
               &_MemoryBatchQuery_Result_default_instance_);
  }

  void Swap(MemoryBatchQuery_Result* other);

  // implements Message ----------------------------------------------

  inline MemoryBatchQuery_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  MemoryBatchQuery_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MemoryBatchQuery_Result& from);
  void MergeFrom(const MemoryBatchQuery_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MemoryBatchQuery_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MemoryQuery.Result results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  const ::MemoryQuery_Result& results(int index) const;
  ::MemoryQuery_Result* mutable_results(int index);
  ::MemoryQuery_Result* add_results();
  ::google::protobuf::RepeatedPtrField< ::MemoryQuery_Result >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::MemoryQuery_Result >&
      results() const;

  // @@protoc_insertion_point(class_scope:MemoryBatchQuery.Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::MemoryQuery_Result > results_;
  mutable int _cached_size_;
  friend struct  protobuf_Models_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MemoryBatchQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MemoryBatchQuery) */ {
 public:
  MemoryBatchQuery();
  virtual ~MemoryBatchQuery();

  MemoryBatchQuery(const MemoryBatchQuery& from);

  inline MemoryBatchQuery& operator=(const MemoryBatchQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemoryBatchQuery& default_instance();

  static inline const MemoryBatchQuery* internal_default_instance() {
    return reinterpret_cast<const MemoryBatchQuery*>(
               &_MemoryBatchQuery_default_instance_);
  }

  void Swap(MemoryBatchQuery* other);

  // implements Message ----------------------------------------------

  inline MemoryBatchQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  MemoryBatchQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MemoryBatchQuery& from);
  void MergeFrom(const MemoryBatchQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MemoryBatchQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MemoryBatchQuery_Result Result;

  // accessors -------------------------------------------------------

  // repeated .MemoryQuery queries = 1;
  int queries_size() const;
  void clear_queries();
  static const int kQueriesFieldNumber = 1;
  const ::MemoryQuery& queries(int index) const;
  ::MemoryQuery* mutable_queries(int index);
  ::MemoryQuery* add_queries();
  ::google::protobuf::RepeatedPtrField< ::MemoryQuery >*
      mutable_queries();
  const ::google::protobuf::RepeatedPtrField< ::MemoryQuery >&
      queries() const;

  // @@protoc_insertion_point(class_scope:MemoryBatchQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::MemoryQuery > queries_;
  mutable int _cached_size_;
  friend struct  protobuf_Models_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionQuery_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FunctionQuery.Result) */ {
 public:
  FunctionQuery_Result();
  virtual ~FunctionQuery_Result();

  FunctionQuery_Result(const FunctionQuery_Result& from);

  inline FunctionQuery_Result& operator=(const FunctionQuery_Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionQuery_Result& default_instance();

  static inline const FunctionQuery_Result* internal_default_instance() {
    return reinterpret_cast<const FunctionQuery_Result*>(
               &_FunctionQuery_Result_default_instance_);
  }

  void Swap(FunctionQuery_Result* other);

  // implements Message ----------------------------------------------

  inline FunctionQuery_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  FunctionQuery_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FunctionQuery_Result& from);
  void MergeFrom(const FunctionQuery_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FunctionQuery_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:FunctionQuery.Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend struct  protobuf_Models_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FunctionQuery) */ {
 public:
  FunctionQuery();
  virtual ~FunctionQuery();

  FunctionQuery(const FunctionQuery& from);

  inline FunctionQuery& operator=(const FunctionQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionQuery& default_instance();

  static inline const FunctionQuery* internal_default_instance() {
    return reinterpret_cast<const FunctionQuery*>(
               &_FunctionQuery_default_instance_);
  }

  void Swap(FunctionQuery* other);

  // implements Message ----------------------------------------------

  inline FunctionQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  FunctionQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FunctionQuery& from);
  void MergeFrom(const FunctionQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FunctionQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FunctionQuery_Result Result;

  typedef FunctionQuery_Kind Kind;
  static const Kind DEV =
    FunctionQuery_Kind_DEV;
  static const Kind ENUM_VISIBLE_OBJECTS =
    FunctionQuery_Kind_ENUM_VISIBLE_OBJECTS;
  static const Kind OBJECT_POINTER =
    FunctionQuery_Kind_OBJECT_POINTER;
  static const Kind ACTIVE_PLAYER_POINTER =
    FunctionQuery_Kind_ACTIVE_PLAYER_POINTER;
  static const Kind ACTIVE_PLAYER_GUID =
    FunctionQuery_Kind_ACTIVE_PLAYER_GUID;
  static const Kind MAP_ID =
    FunctionQuery_Kind_MAP_ID;
  static const Kind CLICK_TO_MOVE =
    FunctionQuery_Kind_CLICK_TO_MOVE;
  static inline bool Kind_IsValid(int value) {
    return FunctionQuery_Kind_IsValid(value);
  }
  static const Kind Kind_MIN =
    FunctionQuery_Kind_Kind_MIN;
  static const Kind Kind_MAX =
    FunctionQuery_Kind_Kind_MAX;
  static const int Kind_ARRAYSIZE =
    FunctionQuery_Kind_Kind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Kind_descriptor() {
    return FunctionQuery_Kind_descriptor();
  }
  static inline const ::std::string& Kind_Name(Kind value) {
    return FunctionQuery_Kind_Name(value);
  }
  static inline bool Kind_Parse(const ::std::string& name,
      Kind* value) {
    return FunctionQuery_Kind_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated bytes args = 1;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 1;
  const ::std::string& args(int index) const;
  ::std::string* mutable_args(int index);
  void set_args(int index, const ::std::string& value);
  void set_args(int index, const char* value);
  void set_args(int index, const void* value, size_t size);
  ::std::string* add_args();
  void add_args(const ::std::string& value);
  void add_args(const char* value);
  void add_args(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& args() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_args();

  // .FunctionQuery.Kind kind = 2;
  void clear_kind();
  static const int kKindFieldNumber = 2;
  ::FunctionQuery_Kind kind() const;
  void set_kind(::FunctionQuery_Kind value);

  // @@protoc_insertion_point(class_scope:FunctionQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> args_;
  int kind_;
  mutable int _cached_size_;
  friend struct  protobuf_Models_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WoWObjectsResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WoWObjectsResult) */ {
 public:
  WoWObjectsResult();
  virtual ~WoWObjectsResult();

  WoWObjectsResult(const WoWObjectsResult& from);

  inline WoWObjectsResult& operator=(const WoWObjectsResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WoWObjectsResult& default_instance();

  static inline const WoWObjectsResult* internal_default_instance() {
    return reinterpret_cast<const WoWObjectsResult*>(
               &_WoWObjectsResult_default_instance_);
  }

  void Swap(WoWObjectsResult* other);

  // implements Message ----------------------------------------------

  inline WoWObjectsResult* New() const PROTOBUF_FINAL { return New(NULL); }

  WoWObjectsResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WoWObjectsResult& from);
  void MergeFrom(const WoWObjectsResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WoWObjectsResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WoWObjectsResult_Type Type;
  static const Type NONE =
    WoWObjectsResult_Type_NONE;
  static const Type ITEM =
    WoWObjectsResult_Type_ITEM;
  static const Type CONTAINER =
    WoWObjectsResult_Type_CONTAINER;
  static const Type UNIT =
    WoWObjectsResult_Type_UNIT;
  static const Type PLAYER =
    WoWObjectsResult_Type_PLAYER;
  static const Type GAME_OBJECT =
    WoWObjectsResult_Type_GAME_OBJECT;
  static const Type DYNAMIC_OBJECT =
    WoWObjectsResult_Type_DYNAMIC_OBJECT;
  static const Type CORPSE =
    WoWObjectsResult_Type_CORPSE;
  static inline bool Type_IsValid(int value) {
    return WoWObjectsResult_Type_IsValid(value);
  }
  static const Type Type_MIN =
    WoWObjectsResult_Type_Type_MIN;
  static const Type Type_MAX =
    WoWObjectsResult_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    WoWObjectsResult_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return WoWObjectsResult_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return WoWObjectsResult_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return WoWObjectsResult_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 pointers = 1;
  int pointers_size() const;
  void clear_pointers();
  static const int kPointersFieldNumber = 1;
  ::google::protobuf::uint32 pointers(int index) const;
  void set_pointers(int index, ::google::protobuf::uint32 value);
  void add_pointers(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      pointers() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_pointers();

  // repeated uint64 guids = 2;
  int guids_size() const;
  void clear_guids();
  static const int kGuidsFieldNumber = 2;
  ::google::protobuf::uint64 guids(int index) const;
  void set_guids(int index, ::google::protobuf::uint64 value);
  void add_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guids();

  // repeated .WoWObjectsResult.Type types = 3;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 3;
  ::WoWObjectsResult_Type types(int index) const;
  void set_types(int index, ::WoWObjectsResult_Type value);
  void add_types(::WoWObjectsResult_Type value);
  const ::google::protobuf::RepeatedField<int>& types() const;
  ::google::protobuf::RepeatedField<int>* mutable_types();

  // @@protoc_insertion_point(class_scope:WoWObjectsResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pointers_;
  mutable int _pointers_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guids_;
  mutable int _guids_cached_byte_size_;
  ::google::protobuf::RepeatedField<int> types_;
  mutable int _types_cached_byte_size_;
  mutable int _cached_size_;
  friend struct  protobuf_Models_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// .Request.Kind kind = 1;
inline void Request::clear_kind() {
  kind_ = 0;
}
inline ::Request_Kind Request::kind() const {
  // @@protoc_insertion_point(field_get:Request.kind)
  return static_cast< ::Request_Kind >(kind_);
}
inline void Request::set_kind(::Request_Kind value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:Request.kind)
}

// bytes data = 2;
inline void Request::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::data() const {
  // @@protoc_insertion_point(field_get:Request.data)
  return data_.GetNoArena();
}
inline void Request::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Request.data)
}
#if LANG_CXX11
inline void Request::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Request.data)
}
#endif
inline void Request::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Request.data)
}
inline void Request::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Request.data)
}
inline ::std::string* Request::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:Request.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_data() {
  // @@protoc_insertion_point(field_release:Request.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:Request.data)
}

// -------------------------------------------------------------------

// Response_Error

// string message = 1;
inline void Response_Error::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response_Error::message() const {
  // @@protoc_insertion_point(field_get:Response.Error.message)
  return message_.GetNoArena();
}
inline void Response_Error::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.Error.message)
}
#if LANG_CXX11
inline void Response_Error::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Response.Error.message)
}
#endif
inline void Response_Error::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.Error.message)
}
inline void Response_Error::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.Error.message)
}
inline ::std::string* Response_Error::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:Response.Error.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Error::release_message() {
  // @@protoc_insertion_point(field_release:Response.Error.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Error::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Response.Error.message)
}

// -------------------------------------------------------------------

// Response

// .Response.Kind kind = 1;
inline void Response::clear_kind() {
  kind_ = 0;
}
inline ::Response_Kind Response::kind() const {
  // @@protoc_insertion_point(field_get:Response.kind)
  return static_cast< ::Response_Kind >(kind_);
}
inline void Response::set_kind(::Response_Kind value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:Response.kind)
}

// bytes data = 2;
inline void Response::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::data() const {
  // @@protoc_insertion_point(field_get:Response.data)
  return data_.GetNoArena();
}
inline void Response::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.data)
}
#if LANG_CXX11
inline void Response::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Response.data)
}
#endif
inline void Response::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.data)
}
inline void Response::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.data)
}
inline ::std::string* Response::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:Response.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_data() {
  // @@protoc_insertion_point(field_release:Response.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:Response.data)
}

// -------------------------------------------------------------------

// MemoryQuery_Result

// bytes data = 1;
inline void MemoryQuery_Result::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MemoryQuery_Result::data() const {
  // @@protoc_insertion_point(field_get:MemoryQuery.Result.data)
  return data_.GetNoArena();
}
inline void MemoryQuery_Result::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MemoryQuery.Result.data)
}
#if LANG_CXX11
inline void MemoryQuery_Result::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MemoryQuery.Result.data)
}
#endif
inline void MemoryQuery_Result::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MemoryQuery.Result.data)
}
inline void MemoryQuery_Result::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MemoryQuery.Result.data)
}
inline ::std::string* MemoryQuery_Result::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:MemoryQuery.Result.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MemoryQuery_Result::release_data() {
  // @@protoc_insertion_point(field_release:MemoryQuery.Result.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MemoryQuery_Result::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:MemoryQuery.Result.data)
}

// -------------------------------------------------------------------

// MemoryQuery

// .MemoryQuery.Kind kind = 1;
inline void MemoryQuery::clear_kind() {
  kind_ = 0;
}
inline ::MemoryQuery_Kind MemoryQuery::kind() const {
  // @@protoc_insertion_point(field_get:MemoryQuery.kind)
  return static_cast< ::MemoryQuery_Kind >(kind_);
}
inline void MemoryQuery::set_kind(::MemoryQuery_Kind value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:MemoryQuery.kind)
}

// uint32 address = 2;
inline void MemoryQuery::clear_address() {
  address_ = 0u;
}
inline ::google::protobuf::uint32 MemoryQuery::address() const {
  // @@protoc_insertion_point(field_get:MemoryQuery.address)
  return address_;
}
inline void MemoryQuery::set_address(::google::protobuf::uint32 value) {
  
  address_ = value;
  // @@protoc_insertion_point(field_set:MemoryQuery.address)
}

// bytes data = 3;
inline void MemoryQuery::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MemoryQuery::data() const {
  // @@protoc_insertion_point(field_get:MemoryQuery.data)
  return data_.GetNoArena();
}
inline void MemoryQuery::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MemoryQuery.data)
}
#if LANG_CXX11
inline void MemoryQuery::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MemoryQuery.data)
}
#endif
inline void MemoryQuery::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MemoryQuery.data)
}
inline void MemoryQuery::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MemoryQuery.data)
}
inline ::std::string* MemoryQuery::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:MemoryQuery.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MemoryQuery::release_data() {
  // @@protoc_insertion_point(field_release:MemoryQuery.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MemoryQuery::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:MemoryQuery.data)
}

// int32 size = 4;
inline void MemoryQuery::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 MemoryQuery::size() const {
  // @@protoc_insertion_point(field_get:MemoryQuery.size)
  return size_;
}
inline void MemoryQuery::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:MemoryQuery.size)
}

// -------------------------------------------------------------------

// MemoryBatchQuery_Result

// repeated .MemoryQuery.Result results = 1;
inline int MemoryBatchQuery_Result::results_size() const {
  return results_.size();
}
inline void MemoryBatchQuery_Result::clear_results() {
  results_.Clear();
}
inline const ::MemoryQuery_Result& MemoryBatchQuery_Result::results(int index) const {
  // @@protoc_insertion_point(field_get:MemoryBatchQuery.Result.results)
  return results_.Get(index);
}
inline ::MemoryQuery_Result* MemoryBatchQuery_Result::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:MemoryBatchQuery.Result.results)
  return results_.Mutable(index);
}
inline ::MemoryQuery_Result* MemoryBatchQuery_Result::add_results() {
  // @@protoc_insertion_point(field_add:MemoryBatchQuery.Result.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MemoryQuery_Result >*
MemoryBatchQuery_Result::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:MemoryBatchQuery.Result.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MemoryQuery_Result >&
MemoryBatchQuery_Result::results() const {
  // @@protoc_insertion_point(field_list:MemoryBatchQuery.Result.results)
  return results_;
}

// -------------------------------------------------------------------

// MemoryBatchQuery

// repeated .MemoryQuery queries = 1;
inline int MemoryBatchQuery::queries_size() const {
  return queries_.size();
}
inline void MemoryBatchQuery::clear_queries() {
  queries_.Clear();
}
inline const ::MemoryQuery& MemoryBatchQuery::queries(int index) const {
  // @@protoc_insertion_point(field_get:MemoryBatchQuery.queries)
  return queries_.Get(index);
}
inline ::MemoryQuery* MemoryBatchQuery::mutable_queries(int index) {
  // @@protoc_insertion_point(field_mutable:MemoryBatchQuery.queries)
  return queries_.Mutable(index);
}
inline ::MemoryQuery* MemoryBatchQuery::add_queries() {
  // @@protoc_insertion_point(field_add:MemoryBatchQuery.queries)
  return queries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MemoryQuery >*
MemoryBatchQuery::mutable_queries() {
  // @@protoc_insertion_point(field_mutable_list:MemoryBatchQuery.queries)
  return &queries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MemoryQuery >&
MemoryBatchQuery::queries() const {
  // @@protoc_insertion_point(field_list:MemoryBatchQuery.queries)
  return queries_;
}

// -------------------------------------------------------------------

// FunctionQuery_Result

// bytes data = 1;
inline void FunctionQuery_Result::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionQuery_Result::data() const {
  // @@protoc_insertion_point(field_get:FunctionQuery.Result.data)
  return data_.GetNoArena();
}
inline void FunctionQuery_Result::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FunctionQuery.Result.data)
}
#if LANG_CXX11
inline void FunctionQuery_Result::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FunctionQuery.Result.data)
}
#endif
inline void FunctionQuery_Result::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FunctionQuery.Result.data)
}
inline void FunctionQuery_Result::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FunctionQuery.Result.data)
}
inline ::std::string* FunctionQuery_Result::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:FunctionQuery.Result.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionQuery_Result::release_data() {
  // @@protoc_insertion_point(field_release:FunctionQuery.Result.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionQuery_Result::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:FunctionQuery.Result.data)
}

// -------------------------------------------------------------------

// FunctionQuery

// repeated bytes args = 1;
inline int FunctionQuery::args_size() const {
  return args_.size();
}
inline void FunctionQuery::clear_args() {
  args_.Clear();
}
inline const ::std::string& FunctionQuery::args(int index) const {
  // @@protoc_insertion_point(field_get:FunctionQuery.args)
  return args_.Get(index);
}
inline ::std::string* FunctionQuery::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:FunctionQuery.args)
  return args_.Mutable(index);
}
inline void FunctionQuery::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:FunctionQuery.args)
  args_.Mutable(index)->assign(value);
}
inline void FunctionQuery::set_args(int index, const char* value) {
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:FunctionQuery.args)
}
inline void FunctionQuery::set_args(int index, const void* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FunctionQuery.args)
}
inline ::std::string* FunctionQuery::add_args() {
  // @@protoc_insertion_point(field_add_mutable:FunctionQuery.args)
  return args_.Add();
}
inline void FunctionQuery::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:FunctionQuery.args)
}
inline void FunctionQuery::add_args(const char* value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:FunctionQuery.args)
}
inline void FunctionQuery::add_args(const void* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:FunctionQuery.args)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FunctionQuery::args() const {
  // @@protoc_insertion_point(field_list:FunctionQuery.args)
  return args_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FunctionQuery::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:FunctionQuery.args)
  return &args_;
}

// .FunctionQuery.Kind kind = 2;
inline void FunctionQuery::clear_kind() {
  kind_ = 0;
}
inline ::FunctionQuery_Kind FunctionQuery::kind() const {
  // @@protoc_insertion_point(field_get:FunctionQuery.kind)
  return static_cast< ::FunctionQuery_Kind >(kind_);
}
inline void FunctionQuery::set_kind(::FunctionQuery_Kind value) {
  
  kind_ = value;
  // @@protoc_insertion_point(field_set:FunctionQuery.kind)
}

// -------------------------------------------------------------------

// WoWObjectsResult

// repeated uint32 pointers = 1;
inline int WoWObjectsResult::pointers_size() const {
  return pointers_.size();
}
inline void WoWObjectsResult::clear_pointers() {
  pointers_.Clear();
}
inline ::google::protobuf::uint32 WoWObjectsResult::pointers(int index) const {
  // @@protoc_insertion_point(field_get:WoWObjectsResult.pointers)
  return pointers_.Get(index);
}
inline void WoWObjectsResult::set_pointers(int index, ::google::protobuf::uint32 value) {
  pointers_.Set(index, value);
  // @@protoc_insertion_point(field_set:WoWObjectsResult.pointers)
}
inline void WoWObjectsResult::add_pointers(::google::protobuf::uint32 value) {
  pointers_.Add(value);
  // @@protoc_insertion_point(field_add:WoWObjectsResult.pointers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WoWObjectsResult::pointers() const {
  // @@protoc_insertion_point(field_list:WoWObjectsResult.pointers)
  return pointers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WoWObjectsResult::mutable_pointers() {
  // @@protoc_insertion_point(field_mutable_list:WoWObjectsResult.pointers)
  return &pointers_;
}

// repeated uint64 guids = 2;
inline int WoWObjectsResult::guids_size() const {
  return guids_.size();
}
inline void WoWObjectsResult::clear_guids() {
  guids_.Clear();
}
inline ::google::protobuf::uint64 WoWObjectsResult::guids(int index) const {
  // @@protoc_insertion_point(field_get:WoWObjectsResult.guids)
  return guids_.Get(index);
}
inline void WoWObjectsResult::set_guids(int index, ::google::protobuf::uint64 value) {
  guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:WoWObjectsResult.guids)
}
inline void WoWObjectsResult::add_guids(::google::protobuf::uint64 value) {
  guids_.Add(value);
  // @@protoc_insertion_point(field_add:WoWObjectsResult.guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
WoWObjectsResult::guids() const {
  // @@protoc_insertion_point(field_list:WoWObjectsResult.guids)
  return guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
WoWObjectsResult::mutable_guids() {
  // @@protoc_insertion_point(field_mutable_list:WoWObjectsResult.guids)
  return &guids_;
}

// repeated .WoWObjectsResult.Type types = 3;
inline int WoWObjectsResult::types_size() const {
  return types_.size();
}
inline void WoWObjectsResult::clear_types() {
  types_.Clear();
}
inline ::WoWObjectsResult_Type WoWObjectsResult::types(int index) const {
  // @@protoc_insertion_point(field_get:WoWObjectsResult.types)
  return static_cast< ::WoWObjectsResult_Type >(types_.Get(index));
}
inline void WoWObjectsResult::set_types(int index, ::WoWObjectsResult_Type value) {
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:WoWObjectsResult.types)
}
inline void WoWObjectsResult::add_types(::WoWObjectsResult_Type value) {
  types_.Add(value);
  // @@protoc_insertion_point(field_add:WoWObjectsResult.types)
}
inline const ::google::protobuf::RepeatedField<int>&
WoWObjectsResult::types() const {
  // @@protoc_insertion_point(field_list:WoWObjectsResult.types)
  return types_;
}
inline ::google::protobuf::RepeatedField<int>*
WoWObjectsResult::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:WoWObjectsResult.types)
  return &types_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Request_Kind> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Request_Kind>() {
  return ::Request_Kind_descriptor();
}
template <> struct is_proto_enum< ::Response_Kind> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Response_Kind>() {
  return ::Response_Kind_descriptor();
}
template <> struct is_proto_enum< ::MemoryQuery_Kind> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MemoryQuery_Kind>() {
  return ::MemoryQuery_Kind_descriptor();
}
template <> struct is_proto_enum< ::FunctionQuery_Kind> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FunctionQuery_Kind>() {
  return ::FunctionQuery_Kind_descriptor();
}
template <> struct is_proto_enum< ::WoWObjectsResult_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WoWObjectsResult_Type>() {
  return ::WoWObjectsResult_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Models_2eproto__INCLUDED
